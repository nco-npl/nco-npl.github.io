<!DOCTYPE html>
<!-- NAMESPACE: START -->
<html lang="ne"
	  xmlns="http://www.w3.org/1999/xhtml" 
	  xmlns:epub="http://www.idpf.org/2007/ops" 
	  xmlns:ev="http://www.w3.org/2001/xml-events"
	  xmlns:ibooks="http://apple.com/ibooks/html-extensions"
	  epub:prefix="ibooks: http://vocabulary.itunes.apple.com/rdf/ibooks/vocabulary-extensions-1.0/"
	  >
	<head>
		<meta name="generator" content="PubCoder 5.0.9.1262 for macOS" />
		<meta charset="utf-8"/>
    	<title>28</title>
		<meta name="viewport" content="width=1024, height=576" /> 
		<link rel="stylesheet" type="text/css" href="../../css/general.styles.css" />
		<link rel="stylesheet" type="text/css" href="../../css/animate.css" />
		<link rel="stylesheet" type="text/css" href="../../css/jquery-ui.min.css" />
		<link rel="stylesheet" type="text/css" href="../../css/jquery-ui.structure.min.css" />
		<link rel="stylesheet" type="text/css" href="../../css/jquery-ui.theme.min.css" />
		
		<link rel="stylesheet" type="text/css" href="styles.css" />
		


		<script type="text/javascript" src="../../js/jquery.js"></script>
<script type="text/javascript" src="../../js/spritespin.js"></script>
<script type="text/javascript" src="../../js/jquery-ui.min.js"></script>	
<script type="text/javascript" src="../../js/jquery.ui.touch-punch.js"></script>	
<script type='text/javascript' src='../../js/jquery.scrollTo.min.js'></script>
<script type='text/javascript' src='../../js/jquery.easie-min.js'></script>
<script type='text/javascript' src='../../js/jquery.move.js'></script>
<script type='text/javascript' src='../../js/jquery.SCswipe.js'></script>
<script type='text/javascript' src='../../js/jquery-css-transform.js'></script>
<script type='text/javascript' src='../../js/jquery-animate-css-rotate-scale.js'></script>
<script type='text/javascript' src='../../js/jquery.animate-shadow-min.js'></script>
<script type='text/javascript' src='../../js/jquery.animate-dropshadow.js'></script>
<script type="text/javascript" src="../../js/jquery.panzoom.min.js"></script>
<script type="text/javascript" src="../../js/underscore-min.js"></script>
<script type="text/javascript" src="../../js/remodal.js"></script>
<script type="text/javascript" src="../../js/general.functions.js"></script>
<script type="text/javascript" src="../../js/pubcoder.js"></script>
<script type="text/javascript" src="../../js/pubcoder.devicemotion.js"></script>
<script type="text/javascript" src="../../js/unmask.js"></script>
<script type="text/javascript" src="../../js/idangerous.swiper-2.3.js"></script>
<script type="text/javascript" src="../../js/photogallery.js"></script>
<script type="text/javascript" src="../../js/quiz-multi.js"></script>
<script type="text/javascript" src="../../js/drawer.js"></script>
<script type="text/javascript" src="../../js/flood_fill.js"></script>
<script type="text/javascript" src="../../js/scw_widgets.js"></script>
<script type="text/javascript" src="../../js/scw_panzoom.js"></script>
<script type="text/javascript" src="../../js/scw_memory_game.js"></script>
<script type="text/javascript" src="../../js/hammer.min.js"></script>
<script type="text/javascript" src="../../js/crossword.js"></script>
<script type="text/javascript" src="../../js/fill-in.js"></script>
<script type="text/javascript" src="../../js/trueFalse.js"></script>
<script type="text/javascript" src="../../js/matchWordWithPicture.js"></script>
<script type="text/javascript" src="../../js/xpub.js"></script>

		<script type="text/javascript">
			//<![CDATA[
			
			
			//]]>
		</script>

		

	
		

		<script type="text/javascript" src="actions.js"></script>	  		 
    </head>


    <body class="SCNoStage">
    	<div class="remodal" data-remodal-id="SCDefaultAlert" role="dialog" aria-labelledby="SCDefaultAlertTitle" aria-describedby="SCDefaultAlertMsg">
			<button data-remodal-action="close" class="remodal-close" aria-label="Close"></button>
	  		<div>
	    		<h2 id="SCDefaultAlertTitle"></h2>
	    		<p id="SCDefaultAlertMsg"></p>
			</div>
		  	<br/>
		  	<button data-remodal-action="confirm" class="remodal-confirm">OK</button>
		</div>
		<div class="remodal" data-remodal-id="SCDefaultConfirmDialog" role="dialog" aria-labelledby="SCDefaultConfirmDialogTitle" aria-describedby="SCDefaultConfirmDialogMsg">
	  		<div>
	    		<h2 id="SCDefaultConfirmDialogTitle"></h2>
	    		<p id="SCDefaultConfirmDialogMsg"></p>
			</div>
		  	<br/>
		  	<button id="SCDefaultConfirmDialogTitleConfirmBtn" data-remodal-action="confirm" class="remodal-confirm">OK</button>
		  	<button id="SCDefaultConfirmDialogTitleCancelBtn" data-remodal-action="cancel" class="remodal-cancel">Cancel</button>
		</div>
		
		<div id="SCPage" class="SCPage SCPage28 SCPage-w-1024 SCPage-h-576" dir="ltr">
			<div id="SCAnchors">
				

<a id="anchor353" href="../29/page.xhtml" data-src="">anchor</a>
<a id="anchor354" href="../27/page.xhtml" data-src="">anchor</a>
			</div>
			<div id="SCFirstFakeReadAloudDiv">
				<span id="SCFirstFakeReadAloud"></span>
			</div>
			<div class="SCOverlay SCOverlay28">
				
<div id="obj2916" class="SCPageObject SCView SCRectangle"   ></div>
<div id="obj2935" class="SCPageObject SCView SCImage focusable t3 SCEvent SCPointerEvent SCEvent-onTap SCEvent-SCEventReadAloudStarted SCEvent-onTouchUp SCEvent-SCEventReadAloudStopped"  >
<img id="obj2935_img" src="../images/obj2935_image.png"  alt="Voice Over" onclick="XPUB.startStopReadAloud(event);" />
</div>
<div id="obj2928" class="SCPageObject SCView SCImage focusable t4 SCEvent SCPointerEvent SCEvent-onTap"  >
<img id="obj2928_img" src="../images/obj2928_image.png"  alt="Sign Language Video" />
</div>
<div id="obj2924" class="SCPageObject SCView SCImage t5 SCEvent SCPointerEvent SCEvent-onTap"  >
<img id="obj2924_img" src="../images/obj2924_image.png"  alt="Readaloud Image" />
</div>
<div id="obj2921" class="SCPageObject SCView SCImage focusable t1 SCEvent SCPointerEvent SCEvent-onTap"  >
<img id="obj2921_img" src="../images/obj2921_image.png"  alt="Next Page" />
</div>
<div id="obj2918" class="SCPageObject SCView SCImage focusable t2 SCEvent SCPointerEvent SCEvent-onTap"  >
<img id="obj2918_img" src="../images/obj2918_image.png"  alt="Previous Page" />
</div>
<div id="obj2907" class="SCPageObject SCView SCImage focusable t3 SCEvent SCPointerEvent SCEvent-onTouchUp"  >
<img id="obj2907_img" src="../images/obj2907_image.png"  alt="Index" />
</div>
<div id="obj2900" class="SCPageObject SCView SCImage focusable t4"  >
<img id="obj2900_img" src="../images/obj2900_image.png"  alt="Information" />
</div>









			</div>
			
			<div class="SCContentOverlay">
				









			</div>
			<div class="SCContent">
				
<div id="obj4516" class="SCPageObject SCView SCRectangle"   ></div>
<div id="obj1584" class="SCPageObject SCView SCImage"  >
<img id="obj1584_img" src="../images/obj1584_image.jpeg"  aria-hidden="true" />
</div>

<div id="obj1810" class="SCPageObject SCView SCText"   >
	<div id="obj1810_content" class="SCTextContainer SCTextVAlignTop">
<p style="text-align: center;"><span style="font-size: 28px;"><span id="obj703" class="SCReadaloudBlock"><strong>१६</strong></span></span></p>
	</div>
</div>
<div id="obj2533" class="SCPageObject SCView SCText trans"   >
	<div id="obj2533_content" class="SCTextContainer SCTextVAlignTop">
<h2><span lang="EN-US" style="font-size: 26px;">(क)   जोडा मिलाऔँ  :</span></h2>
	</div>
</div>
<div id="obj2080" class="SCPageObject SCView SCSmartObject"   >
	<iframe style="border: 0; width: 100%; height: 100%;" srcdoc="&lt;html style=&quot;min-height: 100%&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=&quot;min-height: 100%; margin: 0; padding: 0;&quot; style=&quot;overflow:hidden;&quot; &gt;&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
  &lt;script&gt;
    const gameConfig = {
    pairs: [
      {
        left: {
          id: &quot;ball&quot;,
          image: &quot;../images/pasted-graphics-84.png&quot;,
          alt: &quot;A Ball&quot;,
        },
        right: {
          id: &quot;ball-r&quot;,
          image: &quot;../images/pasted-graphics-84.png&quot;,
          alt: &quot;A ball&quot;,
        }
      },
      {
        left: {
          id: &quot;car&quot;,
          image: &quot;../images/pasted-graphics-85.png&quot;,
          alt: &quot;A car&quot;,
        },
        right: {
          id: &quot;car-r&quot;,
          image: &quot;../images/pasted-graphics-85.png&quot;,
          alt: &quot;A Car&quot;,
        }
      },
      {
        left: {
          id: &quot;Plane&quot;,
          image: &quot;../images/pasted-graphics-86.png&quot;,
          alt: &quot;A Plane&quot;,
        },
        right: {
          id: &quot;Plane-r&quot;,
          image: &quot;../images/pasted-graphics-86.png&quot;,
          alt: &quot;A Plane&quot;,
        }
      },
      {
        left: {
          id: &quot;dandibeyo&quot;,
          image: &quot;../images/pasted-graphics-87.png&quot;,
          alt: &quot;A Dandibeyo&quot;,
        },
        right: {
          id: &quot;dandibeyo-r&quot;,
          image: &quot;../images/pasted-graphics-87.png&quot;,
          alt: &quot;A Dandibeyo&quot;,
        }
      },
      {
        left: {
          id: &quot;doll&quot;,
          image: &quot;../images/pasted-graphics-88.png&quot;,
          alt: &quot;A Doll&quot;,
        },
        right: {
          id: &quot;doll-r&quot;,
          image: &quot;../images/pasted-graphics-88.png&quot;,
          alt: &quot;A Doll&quot;,
        }
      },
      {
        left: {
          id: &quot;tt&quot;,
          image: &quot;../images/pasted-graphics-89.png&quot;,
          alt: &quot;A TT&quot;,
        },
        right: {
          id: &quot;tt-r&quot;,
          image: &quot;../images/pasted-graphics-89.png&quot;,
          alt: &quot;A TT&quot;,
        }
      }
    ]
  };
  &lt;/script&gt;
  &lt;style&gt;
    body {
      font-family: sans-serif;
      margin: 0;
      padding: 20px;
      min-height: 100vh;
      background: #fff;
    }
    .game-container {
      display: flex;
      justify-content: center;
      gap: clamp(20px, 5vw, 100px);
      max-width: 1200px;
      margin: 0 auto;
    }
    .column {
      display: flex;
      flex-direction: column;
      gap: clamp(15px, 3vh, 30px);
      flex: 1;
      max-width: 300px;
    }
    .item {
      width: 100%;
      aspect-ratio: 1;
      max-width: 80px;
      cursor: grab;
      border: 1px solid #ccc;
      border-radius: 8px;
      position: relative;
      background: #fff;
      margin: 0 auto;
      z-index: 2;
    }
    .item:focus {
      outline: 3px solid #4A90E2;
      outline-offset: 2px;
    }
    .item img {
      width: 100%;
      height: 100%;
      object-fit: contain;
      padding: 8px;
      box-sizing: border-box;
    }
    .item[aria-grabbed=&quot;true&quot;] {
      opacity: 0.5;
    }
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      border: 0;
    }
    .game-instructions {
      text-align: center;
      margin-bottom: clamp(20px, 4vh, 40px);
    }
    .game-instructions h1 {
      font-size: clamp(24px, 4vw, 32px);
      margin: 0 0 16px 0;
    }
    .game-instructions p {
      font-size: clamp(14px, 2vw, 16px);
      margin: 0;
      color: #666;
    }
    @media (max-width: 600px) {
      body {
        padding: 10px;
      }
      .game-container {
        flex-direction: column;
        align-items: center;
        gap: 40px;
      }
      .column {
        width: 100%;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
      }
      .item {
        max-width: 60px;
      }
    }
    /* Style for the leader-line SVG container */
    .leader-line {
      z-index: 1;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div role=&quot;main&quot;&gt;
  &lt;div class=&quot;game-instructions&quot;&gt;
    &lt;p id=&quot;game-description&quot;&gt;Match the items on the left with their related items on the right using drag and drop or keyboard controls.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;game-container&quot; role=&quot;application&quot; aria-labelledby=&quot;game-description&quot;&gt;
    &lt;div class=&quot;column&quot; id=&quot;left-items&quot; role=&quot;list&quot; aria-label=&quot;Source items&quot;&gt;
      &lt;!-- Items will be populated by JavaScript --&gt;
    &lt;/div&gt;
    &lt;div class=&quot;column&quot; id=&quot;right-items&quot; role=&quot;list&quot; aria-label=&quot;Target items&quot;&gt;
      &lt;!-- Items will be populated by JavaScript --&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div aria-live=&quot;polite&quot; class=&quot;sr-only&quot; id=&quot;game-announcer&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/leader-line/1.0.7/leader-line.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  
  function createItem(itemData, isLeftSide) {
    const div = document.createElement(&#39;div&#39;);
    div.className = &#39;item&#39;;
    div.id = itemData.id;
    div.setAttribute(&#39;role&#39;, &#39;listitem&#39;);
    div.setAttribute(&#39;tabindex&#39;, &#39;0&#39;);
    div.draggable = true;
    div.dataset.match = itemData.match;
    div.setAttribute(&#39;aria-grabbed&#39;, &#39;false&#39;);
    div.setAttribute(&#39;role&#39;, &#39;button&#39;);
    div.setAttribute(&#39;aria-dropeffect&#39;, &#39;none&#39;);
    const img = document.createElement(&#39;img&#39;);
    img.src = itemData.image;
    img.alt = itemData.alt;
    img.setAttribute(&#39;draggable&#39;, &#39;false&#39;);
    div.appendChild(img);
    return div;
  }
  const leftItems = gameConfig.pairs.map(pair =&gt; ({
    id: pair.left.id,
    image: pair.left.image,
    alt: pair.left.alt,
    match: pair.right.id
  }));
  const rightItems = gameConfig.pairs.map(pair =&gt; ({
    id: pair.right.id,
    image: pair.right.image,
    alt: pair.right.alt,
    match: pair.left.id
  }));
  function shuffleArray(array) {
    for (let i = array.length - 1; i &gt; 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }
  shuffleArray(leftItems);
  shuffleArray(rightItems);
  const leftContainer = document.getElementById(&#39;left-items&#39;);
  const rightContainer = document.getElementById(&#39;right-items&#39;);
  const announcer = document.getElementById(&#39;game-announcer&#39;);
  leftItems.forEach(item =&gt; {
    const leftItem = createItem(item, true);
    leftContainer.appendChild(leftItem);
  });
  rightItems.forEach(item =&gt; {
    const rightItem = createItem(item, false);
    rightContainer.appendChild(rightItem);
  });
  let dragged = null;
  let selectedItem = null;
  let existingLines = [];
  function checkMatch(sourceItem, targetItem) {
    if (sourceItem.dataset.match === targetItem.id) {
      const isAlreadyMatched = existingLines.some(line =&gt; 
        (line.start === sourceItem &amp;&amp; line.end === targetItem) ||
        (line.start === targetItem &amp;&amp; line.end === sourceItem)
      );
      if (!isAlreadyMatched) {
        const line = new LeaderLine(sourceItem, targetItem, {
          color: &#39;#333333&#39;, 
          size: 1,          
          dash: {animation: true},  
        });
        existingLines.push({ 
          start: sourceItem, 
          end: targetItem, 
          line: line 
        });
        
        announce(&#39;Match successful!&#39;);
        return true;
      }
    }
    return false;
  }
  function announce(message) {
    announcer.textContent = message;
  }
  function isItemMatched(item) {
    return existingLines.some(line =&gt; 
      line.start === item || line.end === item
    );
  }
  function getMatchedPair(item) {
    const match = existingLines.find(line =&gt; 
      line.start === item || line.end === item
    );
    return match ? (match.start === item ? match.end : match.start) : null;
  }
  document.querySelectorAll(&#39;.item&#39;).forEach(item =&gt; {
    item.addEventListener(&#39;focus&#39;, () =&gt; {
      if (isItemMatched(item)) {
        const matchedItem = getMatchedPair(item);
        const itemAlt = item.querySelector(&#39;img&#39;).alt;
        const matchedAlt = matchedItem.querySelector(&#39;img&#39;).alt;
        announce(`${itemAlt} is already matched with ${matchedAlt}`);
      }
    });
    item.addEventListener(&#39;keydown&#39;, (e) =&gt; {
      switch(e.key) {
        case &#39;Enter&#39;:
        case &#39; &#39;:
          e.preventDefault();
          if (!selectedItem) {
            if (isItemMatched(item)) {
              const matchedItem = getMatchedPair(item);
              const itemAlt = item.querySelector(&#39;img&#39;).alt;
              const matchedAlt = matchedItem.querySelector(&#39;img&#39;).alt;
              announce(`${itemAlt} is already matched with ${matchedAlt}. Please select an unmatched item.`);
              return;
            }
            selectedItem = item;
            selectedItem.setAttribute(&#39;aria-grabbed&#39;, &#39;true&#39;);
            announce(`Selected ${item.querySelector(&#39;img&#39;).alt}. Use arrow keys to navigate and Enter to match.`);
            
            const currentGroup = item.parentElement;
            const otherGroup = currentGroup.id === &#39;left-items&#39; ? rightContainer : leftContainer;
            const unmatchedItems = Array.from(otherGroup.children).filter(item =&gt; !isItemMatched(item));
            if (unmatchedItems.length &gt; 0) {
              unmatchedItems[0].focus();
            } else {
              announce(&#39;No unmatched items remaining in the other group.&#39;);
            }
          } else if (selectedItem !== item) {
            if (isItemMatched(item)) {
              announce(`This ${item.querySelector(&#39;img&#39;).alt} is already matched. Please select an unmatched item.`);
              return;
            }
            if (!checkMatch(selectedItem, item) &amp;&amp; !checkMatch(item, selectedItem)) {
              announce(&#39;Not a match. Try again.&#39;);
            }
            selectedItem.setAttribute(&#39;aria-grabbed&#39;, &#39;false&#39;);
            selectedItem = null;
          }
          break;
        case &#39;Escape&#39;:
          if (selectedItem) {
            selectedItem.setAttribute(&#39;aria-grabbed&#39;, &#39;false&#39;);
            selectedItem = null;
            announce(&#39;Selection cleared&#39;);
          }
          break;
        case &#39;ArrowUp&#39;:
        case &#39;ArrowDown&#39;:
          e.preventDefault();
          const items = Array.from(item.parentElement.children);
          const currentIndex = items.indexOf(item);
          const nextIndex = e.key === &#39;ArrowUp&#39; 
            ? (currentIndex - 1 + items.length) % items.length
            : (currentIndex + 1) % items.length;
          items[nextIndex].focus();
          break;
        case &#39;ArrowLeft&#39;:
        case &#39;ArrowRight&#39;:
          e.preventDefault();
          const targetContainer = item.parentElement.id === &#39;left-items&#39; 
            ? rightContainer 
            : leftContainer;
          
          const sourceRect = item.getBoundingClientRect();
          const targetItems = Array.from(targetContainer.children);
          let closestItem = targetItems[0];
          let minDistance = Infinity;
          
          targetItems.forEach(targetItem =&gt; {
            const targetRect = targetItem.getBoundingClientRect();
            const distance = Math.abs(targetRect.top - sourceRect.top);
            if (distance &lt; minDistance) {
              minDistance = distance;
              closestItem = targetItem;
            }
          });
          
          if (closestItem) {
            closestItem.focus();
          }
          break;
      }
    });
  });
  document.querySelectorAll(&#39;.item&#39;).forEach(item =&gt; {
    item.addEventListener(&#39;dragstart&#39;, (e) =&gt; {
      dragged = item;
      item.setAttribute(&#39;aria-grabbed&#39;, &#39;true&#39;);
      announce(`Started dragging ${item.querySelector(&#39;img&#39;).alt}`);
    });
    item.addEventListener(&#39;dragend&#39;, () =&gt; {
      dragged.setAttribute(&#39;aria-grabbed&#39;, &#39;false&#39;);
    });
    item.addEventListener(&#39;dragover&#39;, (e) =&gt; {
      e.preventDefault();
      if (dragged !== item) {
        item.setAttribute(&#39;aria-dropeffect&#39;, &#39;move&#39;);
      }
    });
    item.addEventListener(&#39;dragleave&#39;, () =&gt; {
      item.setAttribute(&#39;aria-dropeffect&#39;, &#39;none&#39;);
    });
    item.addEventListener(&#39;drop&#39;, (e) =&gt; {
      e.preventDefault();
      item.setAttribute(&#39;aria-dropeffect&#39;, &#39;none&#39;);
      if (dragged !== item) {
        if (!checkMatch(dragged, item) &amp;&amp; !checkMatch(item, dragged)) {
          announce(&#39;Not a match. Try again.&#39;);
        }
      }
    });
  });
  window.addEventListener(&#39;resize&#39;, () =&gt; {
    existingLines.forEach(({line}) =&gt; line.position());
  });
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;&lt;/body&gt;&lt;/html&gt;"></iframe>
</div>

<video id="obj4424" playsinline="playsinline" class="SCPageObject SCView SCMovie"     autoplay="autoplay" muted="muted"  >
	<source src="../video/Unit-1.27.mp4" type="video/mp4" />
	<div class="SCVideoFallback"><p>Your player does not support HTML5 video</p></div>
</video>






				
			</div>
			<div class="SCContentUnderlay">
				









			</div>
		</div>
		

		<script type="text/javascript">
			//<![CDATA[
			
			
			//]]>
		</script>
    </body>
 </html>
